---
- name: Setup Kubernetes 1.31 Cluster and Install Cilium
  hosts: all
  become: true
  tasks:

    # Step 1: Disable swap
    - name: Disable swap temporarily
      command: swapoff -a

    - name: Ensure swap is disabled in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(\S+\s+none\s+swap\s+sw\s+\d+\s+\d+)'
        replace: '#\1'
      notify: Reload fstab

    - name: Reload fstab
      command: mount -a
      when: fstab is changed

    # Step 2: Install prerequisites for Kubernetes repo
    - name: Install necessary packages for Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    # Step 3: Download Kubernetes signing key and add Kubernetes repository
    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes signing key
      command: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      ansible.builtin.shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | \
        tee /etc/apt/sources.list.d/kubernetes.list

    # Step 4: Update apt package index and install Kubernetes components
    - name: Update package index
      apt:
        update_cache: yes

    - name: Install kubelet, kubeadm, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold kubelet, kubeadm, and kubectl versions
      command: apt-mark hold kubelet kubeadm kubectl

    # Step 5: Enable kubelet service
    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    # Step 6: Enable IPv4 forwarding for Kubernetes
    - name: Enable IPv4 packet forwarding
      copy:
        content: |
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
        owner: root
        mode: '0644'

    - name: Apply sysctl changes
      command: sysctl --system

    # Step 7: Install containerd and configure SystemdCgroup
    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Update containerd config to enable SystemdCgroup
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
      notify: Restart containerd

    - name: Reload systemd manager configuration
      command: systemctl daemon-reload

    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

    # Step 8: Initialize the Kubernetes control-plane node
    - name: Initialize Kubernetes control-plane node
      command: kubeadm init --apiserver-advertise-address=10.1.0.192
      when: inventory_hostname == 'control-plane-node'

    # Step 9: Set up kubectl for user
    - name: Create .kube directory for the user
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy kubeconfig to user's home directory
      command: cp -i /etc/kubernetes/admin.conf {{ ansible_env.HOME }}/.kube/config
      become: true

    - name: Set ownership of kubeconfig file
      command: chown $(id -u):$(id -g) {{ ansible_env.HOME }}/.kube/config
      become: true

    # Step 10: Install Cilium CLI and CNI
    - name: Download and install Cilium CLI
      ansible.builtin.shell: |
        CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
        CLI_ARCH=amd64
        if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
        curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
        sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
        sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
        rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}

    - name: Install Cilium as CNI
      command: cilium install

